@-webkit-keyframes mountain{to{scale:1.15}}@keyframes mountain{to{scale:1.15}}@-webkit-keyframes clouds{to{scale:1.35}}@keyframes clouds{to{scale:1.35}}@-webkit-keyframes trees{to{scale:1.25}}@keyframes trees{to{scale:1.25}}@-webkit-keyframes cave{to{scale:2}}@keyframes cave{to{scale:2}}@-webkit-keyframes ellipse1{to{scale:3}}@keyframes ellipse1{to{scale:3}}@-webkit-keyframes content1{0%,30%{opacity:0}to{opacity:1}}@keyframes content1{0%,30%{opacity:0}to{opacity:1}}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}a,b,blockquote,body,canvas,caption,code,div,em,embed,fieldset,figure,footer,form,h1,h2,h3,h4,h5,h6,header,html,i,iframe,img,label,li,main,nav,object,ol,p,pre,section,small,span,strike,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,u,ul,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;-webkit-text-size-adjust:none;-moz-text-size-adjust:none;-ms-text-size-adjust:none;text-size-adjust:none}a{color:inherit;text-decoration:none}footer,header,main,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}input{border-radius:0}body,html{height:100%;font-size:16px}.wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:100%}.main{-webkit-box-flex:1;-ms-flex:1 0 auto;flex:1 0 auto}.footer{-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}.container{max-width:1200px;margin:0 auto;padding:0 15px}.header{width:100%;padding:60px 0 0;position:fixed;top:0;left:0;z-index:100}.header__container{max-width:500px;margin:0 auto}.header__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:0 60px}.header__link{font:400 1rem "Prompt",sans-serif;color:#fff}.parallax{min-height:100vh}.parallax__body{width:100%;height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center}.parallax__content{position:fixed;z-index:10;opacity:0;-webkit-animation-name:content1;animation-name:content1;-webkit-animation-timing-function:linear;animation-timing-function:linear;animation-timeline:scroll()}.parallax__title{font:400 7.5rem "Gravitas One",serif;color:#fff;text-transform:uppercase}.parallax__text{font:400 1.5rem "Gravitas One",serif;color:#fff}.parallax__images{width:100%;height:100vh}.parallax__item{width:100%;height:100%;background:-webkit-gradient(linear,left top,left bottom,to(#82c6f8));background:linear-gradient(#82c6f8 100%)}.parallax__cave,.parallax__clouds,.parallax__ellipse,.parallax__mountain,.parallax__trees{width:100%;height:100%;position:fixed;left:0;-webkit-animation-timing-function:linear;animation-timing-function:linear;animation-timeline:scroll()}.parallax__mountain{background:url(../img/mountain.png) center/contain no-repeat;top:-20%;-webkit-animation-name:mountain;animation-name:mountain}.parallax__clouds{background:url(../img/clouds.png) center/contain no-repeat;top:0;-webkit-animation-name:clouds;animation-name:clouds}.parallax__trees{background:url(../img/trees.png) center/contain no-repeat;top:13%;-webkit-animation-name:trees;animation-name:trees}.parallax__cave{background:url(../img/cave.png) center/cover no-repeat;top:0;-webkit-animation-name:cave;animation-name:cave}.parallax__ellipse{background:url(../img/ellipse.png) center/cover no-repeat;top:0;-webkit-animation-name:ellipse1;animation-name:ellipse1}@supports (-webkit-appearance:none){.parallax__mountain{background:url(../img/mountain.webp) center/contain no-repeat}.parallax__clouds{background:url(../img/clouds.webp) center/contain no-repeat}.parallax__trees{background:url(../img/trees.webp) center/contain no-repeat}.parallax__cave{background:url(../img/cave.webp) center/cover no-repeat}.parallax__ellipse{background:url(../img/ellipse.webp) center/cover no-repeat}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */